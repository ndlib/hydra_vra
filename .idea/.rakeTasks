<?xml version="1.0" encoding="UTF-8"?>
<Settings><!--This file was automatically generated by Ruby plugin.
You are allowed to: 
1. Remove rake task
2. Add existing rake tasks
To add existing rake tasks automatically delete this file and reload the project.
--><RakeGroup description="" fullCmd="" taksId="rake"><RakeGroup description="" fullCmd="" taksId="app"><RakeGroup description="" fullCmd="" taksId="index"><RakeTask description="Index an EAD file at FILE=&lt;location-of-file&gt; using the lib/ead_mapper class" fullCmd="app:index:ead" taksId="ead" /><RakeTask description="index a directory of ead files" fullCmd="app:index:ead_dir" taksId="ead_dir" /><RakeTask description="Index a marc file at FILE=&lt;location-of-file&gt; using the lib/marc_mapper class" fullCmd="app:index:marc" taksId="marc" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="blacklight"><RakeTask description="Copies Blacklight's default images, css and javascript into your apps public/plugin_assets/blacklight directory" fullCmd="blacklight:copy_assets" taksId="copy_assets" /></RakeGroup><RakeTask description="Runs db:migrate then features for Cruise Control" fullCmd="ccfeatures" taksId="ccfeatures" /><RakeTask description="Runs db:migrate then spec for Cruise Control" fullCmd="ccspec" taksId="ccspec" /><RakeTask description="Remove any temporary products" fullCmd="clean" taksId="clean" /><RakeTask description="Remove any generated file" fullCmd="clobber" taksId="clobber" /><RakeTask description="Remove rdoc products" fullCmd="clobber_rdoc" taksId="clobber_rdoc" /><RakeTask description="Remove rcov products for spec" fullCmd="clobber_spec" taksId="clobber_spec" /><RakeTask description="Alias for cucumber:ok / Alias for cucumber:ok" fullCmd="cucumber" taksId="cucumber" /><RakeGroup description="" fullCmd="" taksId="cucumber"><RakeTask description="Run all features / Run all features" fullCmd="cucumber:all" taksId="all" /><RakeTask description="Run features that should pass / Run features that should pass" fullCmd="cucumber:ok" taksId="ok" /><RakeTask description="Run features that are being worked on / Run features that are being worked on" fullCmd="cucumber:wip" taksId="wip" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="db"><RakeTask description="Raises an error if there are pending migrations" fullCmd="db:abort_if_pending_migrations" taksId="abort_if_pending_migrations" /><RakeTask description="Retrieves the charset for the current environment's database" fullCmd="db:charset" taksId="charset" /><RakeTask description="Retrieves the collation for the current environment's database" fullCmd="db:collation" taksId="collation" /><RakeTask description="Create the database defined in config/database.yml for the current RAILS_ENV" fullCmd="db:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="create"><RakeTask description="Create all the local databases defined in config/database.yml" fullCmd="db:create:all" taksId="all" /></RakeGroup><RakeTask description="Drops the database for the current RAILS_ENV" fullCmd="db:drop" taksId="drop" /><RakeGroup description="" fullCmd="" taksId="drop"><RakeTask description="Drops all the local databases defined in config/database.yml" fullCmd="db:drop:all" taksId="all" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="fixtures"><RakeTask description="Search for a fixture given a LABEL or ID" fullCmd="db:fixtures:identify" taksId="identify" /><RakeTask description="Load fixtures into the current environment's database" fullCmd="db:fixtures:load" taksId="load" /><RakeGroup description="" fullCmd="" taksId="plugins"><RakeTask description="Load plugin fixtures into the current environment's database" fullCmd="db:fixtures:plugins:load" taksId="load" /></RakeGroup></RakeGroup><RakeTask description="Migrate the database through scripts in db/migrate and update db/schema.rb by invoking db:schema:dump. Target specific version with VERSION=x. Turn off output with VERBOSE=false" fullCmd="db:migrate" taksId="migrate" /><RakeGroup description="" fullCmd="" taksId="migrate"><RakeTask description="Migrate database and plugins to current status" fullCmd="db:migrate:all" taksId="all" /><RakeTask description="Runs the &quot;down&quot; for a given migration VERSION" fullCmd="db:migrate:down" taksId="down" /><RakeTask description="Migrate a specified plugin" fullCmd="db:migrate:pluginenvironment[name,version]" taksId="pluginenvironment[name,version]" /><RakeTask description="Migrate plugins to current status" fullCmd="db:migrate:plugins" taksId="plugins" /><RakeTask description="Rollbacks the database one migration and re migrate up" fullCmd="db:migrate:redo" taksId="redo" /><RakeTask description="Resets your database using your migrations for the current environment" fullCmd="db:migrate:reset" taksId="reset" /><RakeTask description="Runs the &quot;up&quot; for a given migration VERSION" fullCmd="db:migrate:up" taksId="up" /><RakeTask description="For engines coming from Rails version &lt; 2.0 or for those previously updated to work with Sven Fuch's fork of engines, you need to upgrade the schema info table" fullCmd="db:migrate:upgrade_plugin_migrations" taksId="upgrade_plugin_migrations" /><RakeTask description="" fullCmd="db:migrate:pluginenvironment" taksId="pluginenvironment" /></RakeGroup><RakeTask description="Drops and recreates the database from db/schema.rb for the current environment and loads the seeds" fullCmd="db:reset" taksId="reset" /><RakeTask description="Rolls the schema back to the previous version" fullCmd="db:rollback" taksId="rollback" /><RakeGroup description="" fullCmd="" taksId="schema"><RakeTask description="Create a db/schema.rb file that can be portably used against any DB supported by AR" fullCmd="db:schema:dump" taksId="dump" /><RakeTask description="Load a schema.rb file into the database" fullCmd="db:schema:load" taksId="load" /></RakeGroup><RakeTask description="Load the seed data from db/seeds.rb" fullCmd="db:seed" taksId="seed" /><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="Clear the sessions table" fullCmd="db:sessions:clear" taksId="clear" /><RakeTask description="Creates a sessions migration for use with ActiveRecord::SessionStore" fullCmd="db:sessions:create" taksId="create" /></RakeGroup><RakeTask description="Create the database, load the schema, and initialize with the seed data" fullCmd="db:setup" taksId="setup" /><RakeGroup description="" fullCmd="" taksId="structure"><RakeTask description="Dump the database structure to a SQL file" fullCmd="db:structure:dump" taksId="dump" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="Recreate the test database from the current environment's database schema" fullCmd="db:test:clone" taksId="clone" /><RakeTask description="Recreate the test databases from the development structure" fullCmd="db:test:clone_structure" taksId="clone_structure" /><RakeTask description="Recreate the test database from the current schema.rb" fullCmd="db:test:load" taksId="load" /><RakeTask description="Check for pending migrations and load the test schema" fullCmd="db:test:prepare" taksId="prepare" /><RakeTask description="Empty the test database" fullCmd="db:test:purge" taksId="purge" /></RakeGroup><RakeTask description="Retrieves the current schema version number" fullCmd="db:version" taksId="version" /><RakeTask description="" fullCmd="db:load_config" taksId="load_config" /></RakeGroup><RakeTask description="Generate RDoc" fullCmd="doc" taksId="doc" /><RakeGroup description="" fullCmd="" taksId="doc"><RakeTask description="Build the RDOC HTML Files" fullCmd="doc:app" taksId="app" /><RakeTask description="Remove generated documenation" fullCmd="doc:clean" taksId="clean" /><RakeTask description="Remove rdoc products" fullCmd="doc:clobber_app" taksId="clobber_app" /><RakeTask description="Remove plugin documentation" fullCmd="doc:clobber_plugins" taksId="clobber_plugins" /><RakeTask description="Remove rdoc products" fullCmd="doc:clobber_rails" taksId="clobber_rails" /><RakeTask description="Generate YARD Documentation" fullCmd="doc:generate" taksId="generate" /><RakeTask description="Generate Rails guides" fullCmd="doc:guides" taksId="guides" /><RakeTask description="Generate documentation for all installed plugins" fullCmd="doc:plugins" taksId="plugins" /><RakeGroup description="" fullCmd="" taksId="plugins"><RakeTask description="Generate documentation for the acts_as_taggable_on_steroids plugin" fullCmd="doc:plugins:acts_as_taggable_on_steroids" taksId="acts_as_taggable_on_steroids" /><RakeTask description="Create plugin documentation for 'acts_as_taggable_on_steroids'" fullCmd="doc:plugins:acts_as_taggable_on_steroidsenvironment" taksId="acts_as_taggable_on_steroidsenvironment" /><RakeTask description="Generate documentation for the blacklight plugin" fullCmd="doc:plugins:blacklight" taksId="blacklight" /><RakeTask description="Create plugin documentation for 'blacklight'" fullCmd="doc:plugins:blacklightenvironment" taksId="blacklightenvironment" /><RakeTask description="Generate documentation for the engines plugin" fullCmd="doc:plugins:engines" taksId="engines" /><RakeTask description="Create plugin documentation for 'engines'" fullCmd="doc:plugins:enginesenvironment" taksId="enginesenvironment" /><RakeTask description="Generate documentation for the fluid-infusion plugin" fullCmd="doc:plugins:fluid-infusion" taksId="fluid-infusion" /><RakeTask description="Create plugin documentation for 'fluid-infusion'" fullCmd="doc:plugins:fluid-infusionenvironment" taksId="fluid-infusionenvironment" /><RakeTask description="Generate documentation for the gemsonrails plugin" fullCmd="doc:plugins:gemsonrails" taksId="gemsonrails" /><RakeTask description="Create plugin documentation for 'gemsonrails'" fullCmd="doc:plugins:gemsonrailsenvironment" taksId="gemsonrailsenvironment" /><RakeTask description="Generate documentation for the haml plugin" fullCmd="doc:plugins:haml" taksId="haml" /><RakeTask description="Create plugin documentation for 'haml'" fullCmd="doc:plugins:hamlenvironment" taksId="hamlenvironment" /><RakeTask description="Generate documentation for the hydra_repository plugin" fullCmd="doc:plugins:hydra_repository" taksId="hydra_repository" /><RakeTask description="Create plugin documentation for 'hydra_repository'" fullCmd="doc:plugins:hydra_repositoryenvironment" taksId="hydra_repositoryenvironment" /><RakeTask description="Generate documentation for the hydrangea_articles plugin" fullCmd="doc:plugins:hydrangea_articles" taksId="hydrangea_articles" /><RakeTask description="Create plugin documentation for 'hydrangea_articles'" fullCmd="doc:plugins:hydrangea_articlesenvironment" taksId="hydrangea_articlesenvironment" /><RakeTask description="Generate documentation for the hydrangea_datasets plugin" fullCmd="doc:plugins:hydrangea_datasets" taksId="hydrangea_datasets" /><RakeTask description="Create plugin documentation for 'hydrangea_datasets'" fullCmd="doc:plugins:hydrangea_datasetsenvironment" taksId="hydrangea_datasetsenvironment" /><RakeTask description="Generate documentation for the resource_controller plugin" fullCmd="doc:plugins:resource_controller" taksId="resource_controller" /><RakeTask description="Create plugin documentation for 'resource_controller'" fullCmd="doc:plugins:resource_controllerenvironment" taksId="resource_controllerenvironment" /><RakeTask description="Generate documentation for the stanford_salt plugin" fullCmd="doc:plugins:stanford_salt" taksId="stanford_salt" /><RakeTask description="Create plugin documentation for 'stanford_salt'" fullCmd="doc:plugins:stanford_saltenvironment" taksId="stanford_saltenvironment" /><RakeTask description="Generate documentation for the white_list plugin" fullCmd="doc:plugins:white_list" taksId="white_list" /><RakeTask description="Create plugin documentation for 'white_list'" fullCmd="doc:plugins:white_listenvironment" taksId="white_listenvironment" /></RakeGroup><RakeTask description="Build the RDOC HTML Files" fullCmd="doc:rails" taksId="rails" /><RakeTask description="Force a rebuild of the RDOC files" fullCmd="doc:reapp" taksId="reapp" /><RakeTask description="Force a rebuild of the RDOC files" fullCmd="doc:rerails" taksId="rerails" /><RakeTask description="" fullCmd="doc:clobber" taksId="clobber" /></RakeGroup><RakeTask description="List the gems that this rails application depends on" fullCmd="gems" taksId="gems" /><RakeGroup description="" fullCmd="" taksId="gems"><RakeTask description="Build any native extensions for unpacked gems" fullCmd="gems:build" taksId="build" /><RakeGroup description="" fullCmd="" taksId="build"><RakeTask description="Force the build of all gems" fullCmd="gems:build:force" taksId="force" /></RakeGroup><RakeTask description="Freeze a RubyGem into this Rails application; init.rb will be loaded on startup" fullCmd="gems:freeze" taksId="freeze" /><RakeTask description="Installs all required gems" fullCmd="gems:install" taksId="install" /><RakeTask description="Link a RubyGem into this Rails application; init.rb will be loaded on startup" fullCmd="gems:link" taksId="link" /><RakeTask description="Regenerate gem specifications in correct format" fullCmd="gems:refresh_specs" taksId="refresh_specs" /><RakeTask description="Unfreeze/unlink a RubyGem from this Rails application" fullCmd="gems:unfreeze" taksId="unfreeze" /><RakeTask description="Unpacks all required gems into vendor/gems" fullCmd="gems:unpack" taksId="unpack" /><RakeGroup description="" fullCmd="" taksId="unpack"><RakeTask description="Unpacks all required gems and their dependencies into vendor/gems" fullCmd="gems:unpack:dependencies" taksId="dependencies" /></RakeGroup><RakeTask description="" fullCmd="gems:base" taksId="base" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="hydra"><RakeGroup description="" fullCmd="" taksId="default_fixtures"><RakeTask description="Remove default Hydra fixtures" fullCmd="hydra:default_fixtures:delete" taksId="delete" /><RakeTask description="Load default Hydra fixtures" fullCmd="hydra:default_fixtures:load" taksId="load" /><RakeTask description="Refresh default Hydra fixtures" fullCmd="hydra:default_fixtures:refresh" taksId="refresh" /></RakeGroup><RakeTask description="Delete the object identified by pid" fullCmd="hydra:delete" taksId="delete" /><RakeTask description="Export the object identified by pid into spec/fixtures" fullCmd="hydra:harvest_fixture" taksId="harvest_fixture" /><RakeTask description="Import the fixture located at the provided path" fullCmd="hydra:import_fixture" taksId="import_fixture" /><RakeGroup description="" fullCmd="" taksId="jetty"><RakeTask description="Copies the default SOLR config for the bundled Hydra Testing Server" fullCmd="hydra:jetty:config" taksId="config" /><RakeTask description="Copies the default SOLR config files and starts up the fedora instance" fullCmd="hydra:jetty:load" taksId="load" /><RakeTask description="Restarts the bundled Hydra Testing Server" fullCmd="hydra:jetty:restart" taksId="restart" /><RakeTask description="Starts the bundled Hydra Testing Server" fullCmd="hydra:jetty:start" taksId="start" /><RakeTask description="Returns the status of the Hydra::TestingServer" fullCmd="hydra:jetty:status" taksId="status" /><RakeTask description="Stops the bundled Hydra Testing Server" fullCmd="hydra:jetty:stop" taksId="stop" /></RakeGroup><RakeTask description="Delete and re-import the fixture identified by pid" fullCmd="hydra:refresh_fixture" taksId="refresh_fixture" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="local"><RakeTask description="Invokes Applicatino level cucumber features wrapped in the TestSolrServer" fullCmd="local:cucumber" taksId="cucumber" /><RakeTask description="Invokes Application level rspec tests wrapped in the TestSolrServer" fullCmd="local:spec" taksId="spec" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="log"><RakeTask description="Truncates all *.log files in log/ to zero bytes" fullCmd="log:clear" taksId="clear" /></RakeGroup><RakeTask description="Prints out your Rack middleware stack" fullCmd="middleware" taksId="middleware" /><RakeTask description="Enumerate all annotations" fullCmd="notes" taksId="notes" /><RakeGroup description="" fullCmd="" taksId="notes"><RakeTask description="Enumerate a custom annotation, specify with ANNOTATION=WTFHAX" fullCmd="notes:custom" taksId="custom" /><RakeTask description="Enumerate all FIXME annotations" fullCmd="notes:fixme" taksId="fixme" /><RakeTask description="Enumerate all OPTIMIZE annotations" fullCmd="notes:optimize" taksId="optimize" /><RakeTask description="Enumerate all TODO annotations" fullCmd="notes:todo" taksId="todo" /></RakeGroup><RakeTask description="prepare a package" fullCmd="package" taksId="package" /><RakeTask description="Run tests, generate RDoc and create packages" fullCmd="prepare-release" taksId="prepare-release" /><RakeTask description="Upload website to RubyForge" fullCmd="publish-rdoc" taksId="publish-rdoc" /><RakeGroup description="" fullCmd="" taksId="rails"><RakeGroup description="" fullCmd="" taksId="freeze"><RakeTask description="Lock to latest Edge Rails, for a specific release use RELEASE=1.2.0" fullCmd="rails:freeze:edge" taksId="edge" /><RakeTask description="Lock this application to the current gems (by unpacking them into vendor/rails)" fullCmd="rails:freeze:gems" taksId="gems" /></RakeGroup><RakeTask description="Applies the template supplied by LOCATION=/path/to/template" fullCmd="rails:template" taksId="template" /><RakeTask description="Unlock this application from freeze of gems or edge and return to a fluid use of system gems" fullCmd="rails:unfreeze" taksId="unfreeze" /><RakeTask description="Update both configs, scripts and public/javascripts from Rails" fullCmd="rails:update" taksId="update" /><RakeGroup description="" fullCmd="" taksId="update"><RakeTask description="Rename application.rb to application_controller.rb" fullCmd="rails:update:application_controller" taksId="application_controller" /><RakeTask description="Update config/boot.rb from your current rails install" fullCmd="rails:update:configs" taksId="configs" /><RakeTask description="Generate dispatcher files in RAILS_ROOT/public" fullCmd="rails:update:generate_dispatchers" taksId="generate_dispatchers" /><RakeTask description="Update your javascripts from your current rails install" fullCmd="rails:update:javascripts" taksId="javascripts" /><RakeTask description="Add new scripts to the application script/ directory" fullCmd="rails:update:scripts" taksId="scripts" /></RakeGroup></RakeGroup><RakeTask description="Generate rdoc for the demo app and the blacklight plugin" fullCmd="rdoc" taksId="rdoc" /><RakeGroup description="" fullCmd="" taksId="replicator"><RakeTask description="Copy a fedora object of the given pid" fullCmd="replicator:copy_object" taksId="copy_object" /><RakeTask description="Copy all objects in the repository" fullCmd="replicator:copy_objects" taksId="copy_objects" /></RakeGroup><RakeTask description="Force a rebuild of the RDOC files" fullCmd="rerdoc" taksId="rerdoc" /><RakeTask description="Print out all defined routes in match order, with names" fullCmd="routes" taksId="routes" /><RakeTask description="Generate a crytographically secure secret key" fullCmd="secret" taksId="secret" /><RakeGroup description="" fullCmd="" taksId="solr"><RakeTask description="Calls Cucumber Features wrapped in the test instance of Solr" fullCmd="solr:features" taksId="features" /><RakeGroup description="" fullCmd="" taksId="marc"><RakeTask description="Index marc data using SolrMarc" fullCmd="solr:marc:index" taksId="index" /><RakeGroup description="" fullCmd="" taksId="index"><RakeTask description="Shows more info about the solr:marc:index task" fullCmd="solr:marc:index:info" taksId="info" /><RakeTask description="" fullCmd="solr:marc:index:work" taksId="work" /></RakeGroup><RakeTask description="Index the supplied test data into Solr; set NOOP to true to view output command" fullCmd="solr:marc:index_test_data" taksId="index_test_data" /></RakeGroup><RakeTask description="Calls RSpec Examples wrapped in the test instance of Solr" fullCmd="solr:spec" taksId="spec" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="solrizer"><RakeTask description="Index a fedora object of the given pid" fullCmd="solrizer:solrize" taksId="solrize" /><RakeTask description="Index all objects in the repository" fullCmd="solrizer:solrize_objects" taksId="solrize_objects" /></RakeGroup><RakeTask description="Run all specs in spec directory (excluding plugin specs)" fullCmd="spec" taksId="spec" /><RakeGroup description="" fullCmd="" taksId="spec"><RakeTask description="Remove rcov products for rcov" fullCmd="spec:clobber_rcov" taksId="clobber_rcov" /><RakeTask description="Run the code examples in spec/controllers" fullCmd="spec:controllers" taksId="controllers" /><RakeGroup description="" fullCmd="" taksId="db"><RakeGroup description="" fullCmd="" taksId="fixtures"><RakeTask description="Load fixtures (from spec/fixtures) into the current environment's database" fullCmd="spec:db:fixtures:load" taksId="load" /></RakeGroup></RakeGroup><RakeTask description="Print Specdoc for all specs (excluding plugin specs)" fullCmd="spec:doc" taksId="doc" /><RakeTask description="Run the code examples in spec/helpers" fullCmd="spec:helpers" taksId="helpers" /><RakeTask description="Run the code examples in spec/integration" fullCmd="spec:integration" taksId="integration" /><RakeTask description="Run the code examples in spec/lib" fullCmd="spec:lib" taksId="lib" /><RakeTask description="Run the code examples in spec/models" fullCmd="spec:models" taksId="models" /><RakeTask description="Print Specdoc for all plugin examples" fullCmd="spec:plugin_doc" taksId="plugin_doc" /><RakeTask description="Run the code examples in vendor/plugins (except RSpec's own)" fullCmd="spec:plugins" taksId="plugins" /><RakeGroup description="" fullCmd="" taksId="plugins"><RakeTask description="Runs the examples for rspec_on_rails" fullCmd="spec:plugins:rspec_on_rails" taksId="rspec_on_rails" /></RakeGroup><RakeTask description="Run all specs in spec directory with RCov (excluding plugin specs)" fullCmd="spec:rcov" taksId="rcov" /><RakeGroup description="" fullCmd="" taksId="server"><RakeTask description="restart spec_server" fullCmd="spec:server:restart" taksId="restart" /><RakeTask description="start spec_server" fullCmd="spec:server:start" taksId="start" /><RakeTask description="check if spec server is running" fullCmd="spec:server:status" taksId="status" /><RakeTask description="stop spec_server" fullCmd="spec:server:stop" taksId="stop" /></RakeGroup><RakeTask description="Run the code examples in spec/views" fullCmd="spec:views" taksId="views" /><RakeTask description="" fullCmd="spec:clobber" taksId="clobber" /><RakeTask description="" fullCmd="spec:statsetup" taksId="statsetup" /></RakeGroup><RakeTask description="Report code statistics (KLOCs, etc) from the application" fullCmd="stats" taksId="stats" /><RakeTask description="Run all unit, functional and integration tests" fullCmd="test" taksId="test" /><RakeGroup description="" fullCmd="" taksId="test"><RakeTask description="Run tests for benchmarkdb:test:prepare / Benchmark the performance tests" fullCmd="test:benchmark" taksId="benchmark" /><RakeGroup description="" fullCmd="" taksId="engines"><RakeTask description="Run tests from within engines plugins (plugins with an 'app' directory)" fullCmd="test:engines:all" taksId="all" /><RakeTask description="Run tests for functionalstest:plugins:setup_plugin_fixtures" fullCmd="test:engines:functionals" taksId="functionals" /><RakeTask description="Run tests for integrationtest:plugins:setup_plugin_fixtures" fullCmd="test:engines:integration" taksId="integration" /><RakeTask description="Run tests for unitstest:plugins:setup_plugin_fixtures" fullCmd="test:engines:units" taksId="units" /></RakeGroup><RakeTask description="Run tests for functionalsdb:test:prepare / Run the functional tests in test/functional" fullCmd="test:functionals" taksId="functionals" /><RakeTask description="Run tests for integrationdb:test:prepare / Run the integration tests in test/integration" fullCmd="test:integration" taksId="integration" /><RakeTask description="Run tests for pluginsenvironment / Run the plugin tests in vendor/plugins/*/**/test (or specify with PLUGIN=name)" fullCmd="test:plugins" taksId="plugins" /><RakeGroup description="" fullCmd="" taksId="plugins"><RakeTask description="Run the plugin tests in vendor/plugins/**/test (or specify with PLUGIN=name)" fullCmd="test:plugins:all" taksId="all" /><RakeTask description="Run tests for functionalssetup_plugin_fixtures" fullCmd="test:plugins:functionals" taksId="functionals" /><RakeTask description="Run tests for integrationsetup_plugin_fixtures" fullCmd="test:plugins:integration" taksId="integration" /><RakeTask description="Mirrors plugin fixtures into a single location to help plugin tests" fullCmd="test:plugins:setup_plugin_fixtures" taksId="setup_plugin_fixtures" /><RakeTask description="Run tests for unitssetup_plugin_fixtures" fullCmd="test:plugins:units" taksId="units" /></RakeGroup><RakeTask description="Run tests for profiledb:test:prepare / Profile the performance tests" fullCmd="test:profile" taksId="profile" /><RakeTask description="Run tests for recentdb:test:prepare / Test recent changes" fullCmd="test:recent" taksId="recent" /><RakeTask description="Run tests for uncommitteddb:test:prepare / Test changes since last checkin (only Subversion and Git)" fullCmd="test:uncommitted" taksId="uncommitted" /><RakeTask description="Run tests for unitsdb:test:prepare / Run the unit tests in test/unit" fullCmd="test:units" taksId="units" /><RakeTask description="" fullCmd="test:warn_about_multiple_plugin_testing_with_engines" taksId="warn_about_multiple_plugin_testing_with_engines" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="time"><RakeGroup description="" fullCmd="" taksId="zones"><RakeTask description="Displays names of all time zones recognized by the Rails TimeZone class, grouped by offset" fullCmd="time:zones:all" taksId="all" /><RakeTask description="Displays names of time zones recognized by the Rails TimeZone class with the same offset as the system local time" fullCmd="time:zones:local" taksId="local" /><RakeTask description="Displays names of US time zones recognized by the Rails TimeZone class, grouped by offset" fullCmd="time:zones:us" taksId="us" /></RakeGroup></RakeGroup><RakeGroup description="" fullCmd="" taksId="tmp"><RakeGroup description="" fullCmd="" taksId="cache"><RakeTask description="Clears all files and directories in tmp/cache" fullCmd="tmp:cache:clear" taksId="clear" /></RakeGroup><RakeTask description="Clear session, cache, and socket files from tmp/" fullCmd="tmp:clear" taksId="clear" /><RakeTask description="Creates tmp directories for sessions, cache, sockets, and pids" fullCmd="tmp:create" taksId="create" /><RakeGroup description="" fullCmd="" taksId="pids"><RakeTask description="Clears all files in tmp/pids" fullCmd="tmp:pids:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sessions"><RakeTask description="Clears all files in tmp/sessions" fullCmd="tmp:sessions:clear" taksId="clear" /></RakeGroup><RakeGroup description="" fullCmd="" taksId="sockets"><RakeTask description="Clears all files in tmp/sockets" fullCmd="tmp:sockets:clear" taksId="clear" /></RakeGroup></RakeGroup><RakeTask description="" fullCmd="default" taksId="default" /><RakeTask description="" fullCmd="doc/api" taksId="doc/api" /><RakeTask description="" fullCmd="doc/api/index.html" taksId="doc/api/index.html" /><RakeTask description="" fullCmd="doc/app" taksId="doc/app" /><RakeTask description="" fullCmd="doc/app/index.html" taksId="doc/app/index.html" /><RakeTask description="" fullCmd="doc/index.html" taksId="doc/index.html" /><RakeTask description="" fullCmd="environment" taksId="environment" /><RakeTask description="" fullCmd="features" taksId="features" /><RakeTask description="" fullCmd="noop" taksId="noop" /><RakeTask description="" fullCmd="publish-packages" taksId="publish-packages" /><RakeTask description="" fullCmd="rails_env" taksId="rails_env" /><RakeTask description="" fullCmd="rubyforge-login" taksId="rubyforge-login" /><RakeTask description="" fullCmd="rubyforge-setup" taksId="rubyforge-setup" /></RakeGroup></Settings>
